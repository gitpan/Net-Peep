# Peep (the network auralizer) - Main configuration file

# This is a test file used during the test phase of Peep client
# installation.

general
  version 0.4.4
  sound-path /usr/local/share/peep/sounds
end general

# This is for my subnet at home
class home
  broadcast 127.0.0.255:2000
  server localhost:2001
end class home

notification
  # One or more mail relays to try
  smtp-relays localhost
  # Minimum seconds between each e-mail. (Setting this to a high value
  # prevents you from being spammed). The following sends an e-mail
  # four times a day:
  notification-interval 21600
end notification

client logparser
  class home
  port 1999
  default
    groups  default,firewall
    logfile /var/log/messages
  end default
  config

    # All patterns matched are done using Perl/awk matching syntax
    # Commented lines are ones that BEGIN with a '#'.  Only those
    # events with groups specified in the groups list (above) or in a
    # groups list provided on the command-line are active.

    # Notification is the notification level if the event is
    # triggered.  See the POD documentation for
    # Net::Peep::Notification for more information on notification
    # levels.

    # Hosts is the name of the hosts on which this check will be
    # performed, separated by commas.  The string 'localhost' or IP
    # address '127.0.0.1' effectively causes the check to be performed
    # on all hosts.  A host can be specified by the host name
    # (probably whatever is returned by the hostname command) or an IP
    # address.

    events
      # Name      Group     Location     Priority   Notification   Pattern                                             Hosts
      http        www       255          0          info          "(GET|POST).*HTTP"                                   localhost 
      code-red    www       128          0          warn          "default\.ida\?XXXX"                                 localhost
      bad-query   www       128         255         crit          "ORA-\d{5}"                                          localhost
      su-login    default   128         255         warn          "PAM_unix\[\d+\]: \(system-auth\) .* opened .* root" localhost
      su-logout   default   128         255         warn          "PAM_unix\[\d+\]: \(system-auth\) .* closed .* root" localhost
      # note that if one of the previous 2 regexes match, the following 2 will be ignored
      login       default   128         255         info          "PAM_unix\[\d+\]: \(system-auth\) .* opened"         localhost
      logout      default   128          0          info          "PAM_unix\[\d+\]: \(system-auth\) .* closed"         localhost
      ssh-logins  default   128          2          info          "sshd.*Accepted password"                            localhost
      bad-login   default   128         255         warn          "PAM_unix\[\d+\]: authentication failure"            localhost
      ip-deny     firewall  128         255         crit          "DENY"                                               localhost
    end events
  end config
  # The following section defines information used by the e-mail
  # notification system, including who the e-mails are supposed to go
  # to and which SMTP relay they should be sent through.  For more
  # information, see the Net::Peep::Notifier documentation.
  notification
    # Specify a list of hosts for which notification is active.  The
    # keyword 'none' may be included in the host list.  Note that
    # 'localhost' or '127.0.0.1' is essentially equivalent to 'all'.
#    notification-hosts localhost
    # Who should be notified (must be a valid e-mail address)
#    notification-recipients bogus.user@bogusdomain.com
    # notifications will be sent at this level and below
#    notification-level warn
  end notification
end client logparser

client sysmonitor
  class home
  port 1999
  default
      sleep      60       # Number of seconds to sleep
  end default
  config
    uptime
        # Name     State   Value   Location  Priority      Notification  Hosts
	maxload    loadavg  2.5    128       0             crit          localhost
	maxusers   users    200    128       0             crit          localhost
    end uptime

    # Specify which and the number of processes that you would like to
    # see running.  Useful for Apache, MySQL, Oracle, crond, sshd,
    # etc. monitoring

    # Name can be a substring; e.g., httpd will catch all
    # /opt/apache/bin/httpd and /usr/sbin/httpd processes

    # Max is the maximum number of processes that should be running.
    # If there is no maximum, specify a very large number or the word
    # 'inf'.

    # Min is the maximum number of processes that should be running.
    # If there is no minimum, specify 0.

    # See above for an explanation of the Event, Notification, or
    # Hosts field.

    procs

        # Name   Event      Max   Min    Location   Priority    Notification  Hosts

        httpd    bad-proc   30    1      128        0           crit          www
        sshd     bad-proc   inf   1      128        0           warn          localhost
        crond    bad-proc   1     1      128        0           crit          localhost
        lpd      bad-proc   inf   1      128        0           warn          localhost

    end procs

    # Specify the maximum diskspace usage for various filesystems.

    # Name can be a substring of the device name; e.g., hda will catch
    # all of /dev/hda, /dev/hda1, ...

    # Max is the maximum percent of disk space usage allowed; e.g., 80
    # if you want to be notified when more than 80% of a disk's
    # capacity is being used.

    # See above for an explanation of the Event, Notification, or
    # Hosts field.

    # Currently only Solaris, Linux, BSD, and Irix are supported.

    disk
        # Name  Event      Max  Location   Priority  Notification   Hosts
        hda     bad-disk   90   128        0         crit           localhost
    end disk
  end config
  # See above for more information on notification settings
  notification
#    notification-hosts localhost
#    notification-recipients bogus.user@bogusdomain.com
#    notification-level crit
  end notification
end client sysmonitor

# Note that the pinger may very well run on the same box as the
# server (at least the way I do it).
client pinger
  class home
  port 1999
  config
    default
      groups  default
    end default

    # Specify a set of hosts who will be pinged.  The event will be
    # triggered if the host is unresponsive.

    # See above for an explanation of the Event, Group, Notification,
    # or Hosts fields.

    hosts
       # Hostname or IP    Event        Group    Location   Priority   Notification  Hosts
       207.171.181.16      ping-amazon  default  255        0          crit          localhost
       www.yahoo.com       ping-yahoo   default  255        0          crit          localhost
    end hosts
  end config
  # See above for more information on notification settings
  notification
#    notification-hosts localhost
#    notification-recipients bogus.user@bogusdomain.com
#    notification-level warn
  end notification
end client pinger

# The following section is a configuration for the standard example of
# creating a custom Peep client: A stock ticker.  For more
# information, see the Net::Peep documentation or the documentation
# accessible from the Peep homepage.
client ticker
  class home
  port 1999
  config
    # Stock symbol  Stock exchange    Event             Max      Min  
    RHAT            nasdaq            red-hat           4.0      3.6
    SUNW            nasdaq            sun-microsystems  9.0      8.0
  end config
  notification
#    notification-hosts localhost
#    notification-recipients bogus.user@bogusdomain.com
#    notification-level warn
  end notification
end client ticker

events
#Event Type      |          Path to Sound File           | # of sounds to load
inc-mail     /usr/local/share/peep/sounds/wetlands/coupled/whistle-01.*          1
http         /usr/local/share/peep/sounds/wetlands/coupled/whistle-01.*          1
login        /usr/local/share/peep/sounds/wetlands/events/sigh.*                 1
out-mail     /usr/local/share/peep/sounds/wetlands/coupled/whistle-02.*          1
ssh-logins   /usr/local/share/peep/sounds/wetlands/coupled/whistle-02.*          1
logout       /usr/local/share/peep/sounds/wetlands/events/croak.*                3
su-login     /usr/local/share/peep/sounds/wetlands/events/light-chirps-04.*      1
bad-query    /usr/local/share/peep/sounds/wetlands/events/thrush-01.*            1
su-logout    /usr/local/share/peep/sounds/wetlands/events/thrush-01.*            1
bad-su       /usr/local/share/peep/sounds/wetlands/events/metallic.*             1
bad-login    /usr/local/share/peep/sounds/wetlands/events/metallic.*             1
bad-proc     /usr/local/share/peep/sounds/wetlands/events/mourning-dove-01.*     1
bad-disk     /usr/local/share/peep/sounds/wetlands/events/mourning-dove-02.*     1
ping-yahoo   /usr/local/share/peep/sounds/misc/events/doorbell.*                 1
# issue a wake-up call if Amazon.com is down ;-)
ping-amazon  /usr/local/share/peep/sounds/misc/events/rooster.*                  1
ip-deny      /usr/local/share/peep/sounds/wetlands/heartbeats/cricket-chirp-01.* 1
red-hat      /usr/local/share/peep/sounds/misc/events/rooster.*                  1
sun-microsystems /usr/local/share/peep/sounds/misc/events/doorbell.*             1
end events

states
#Event Type    |       Path to Sound File                | # of sounds to load |  Fade between time
loadavg           /usr/local/share/sounds/wetlands/states/water-01.*   8                 0.7
users             /usr/local/share/sounds/wetlands/states/rain-01.*    1                 1.5
something         /usr/local/share/sounds/wetlands/states/leaves.*     4                 0.7
end states
